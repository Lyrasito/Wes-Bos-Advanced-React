{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.de772ec8c29f8b0c8cd1.hot-update.js","sources":["webpack:///./components/Search.js"],"sourcesContent":["import React from \"react\";\r\nimport Downshift from \"downshift\";\r\nimport Router from \"next/router\";\r\nimport { ApolloConsumer } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport debounce from \"lodash.debounce\";\r\nimport { DropDown, DropDownItem, SearchStyles } from \"./styles/DropDown\";\r\n\r\nconst SEARCH_ITEMS_QUERY = gql`\r\n  query SEARCH_ITEMS_QUERY($searchTerm: String!) {\r\n    items(\r\n      where: {\r\n        OR: [\r\n          { title_contains: $searchTerm }\r\n          { description_contains: $searchTerm }\r\n        ]\r\n      }\r\n    ) {\r\n      id\r\n      image\r\n      title\r\n    }\r\n  }\r\n`;\r\n\r\nclass AutoComplete extends React.Component {\r\n  state = {\r\n    items: [],\r\n    loading: false,\r\n  };\r\n  handleChange = debounce(async (e, client) => {\r\n    this.setState({ loading: true });\r\n    const res = await client.query({\r\n      query: SEARCH_ITEMS_QUERY,\r\n      variables: { searchTerm: e.target.value },\r\n    });\r\n    this.setState({ items: res.data.items, loading: false });\r\n  }, 350);\r\n  render() {\r\n    return (\r\n      <SearchStyles>\r\n        <div>\r\n          <ApolloConsumer>\r\n            {(client) => (\r\n              <input\r\n                type=\"search\"\r\n                onChange={(e) => {\r\n                  e.persist();\r\n                  this.handleChange(e, client);\r\n                }}\r\n              />\r\n            )}\r\n          </ApolloConsumer>\r\n\r\n          <DropDown>\r\n            {this.state.items.map((item) => (\r\n              <DropDownItem>\r\n                <img src={item.image} alt={item.title} width=\"50px\" />\r\n                <p>{item.title}</p>\r\n              </DropDownItem>\r\n            ))}\r\n          </DropDown>\r\n        </div>\r\n      </SearchStyles>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AutoComplete;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAgBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AAGA;AACA;AAAA;AAAA;AAFA;AACA;AAHA;AAEA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;;;;;;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAUA;;;;AAxCA;AACA;AA0CA;;;;A","sourceRoot":""}